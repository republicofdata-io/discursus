FROM ubuntu:22.04

# Environment variables
ENV DAGSTER_HOME=/opt/dagster/dagster_home/
ENV AWS_ACCESS_KEY_ID=REPLACE_VALUE
ENV AWS_SECRET_ACCESS_KEY=REPLACE_VALUE
ENV SNOWFLAKE_ACCOUNT=REPLACE_VALUE
ENV SNOWFLAKE_USER=REPLACE_VALUE
ENV SNOWFLAKE_PASSWORD=REPLACE_VALUE
ENV SNOWFLAKE_ROLE=REPLACE_VALUE
ENV SNOWFLAKE_LOAD_WAREHOUSE=REPLACE_VALUE
ENV SNOWFLAKE_LOAD_DATABASE=REPLACE_VALUE
ENV SNOWFLAKE_LOAD_SCHEMA=REPLACE_VALUE
ENV SNOWFLAKE_DW_WAREHOUSE=REPLACE_VALUE
ENV SNOWFLAKE_DW_DATABASE=REPLACE_VALUE
ENV SNOWFLAKE_DW_SCHEMA=REPLACE_VALUE
ENV ML_HOST=REPLACE_VALUE
ENV ML_LOGIN=REPLACE_VALUE
ENV ML_PASSWORD=REPLACE_VALUE
ENV ML_RELEVANCY_CLASSIFICATION_MODEL_ID=REPLACE_VALUE


# Create environment
RUN mkdir -p $DAGSTER_HOME

RUN apt-get update && apt-get install -y \
    software-properties-common
RUN add-apt-repository universe
RUN apt-get update && apt-get install -y \
    curl \
    git \
    python3.9 \
    python3-pip \
    zsh \
    unzip

RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.1/zsh-in-docker.sh)"

RUN pip3 install \
    awscli \
    dagster==0.15.6 \
    dagster-graphql==0.15.6 \
    dagit==0.15.6 \
    dagster-postgres==0.15.6 \
    dagster-docker==0.15.6 \
    dagster_shell==0.15.6 \
    dagster_snowflake==0.15.6 \
    dagster_dbt==0.15.6 \
    dbt-core==1.1.1 \
    dbt-snowflake==1.1.0 \
    bs4 \
    optparse-pretty \
    boto3 \
    fsspec


# Install framework packages
RUN pip3 install git+https://github.com/lantrns-analytics/dpf_utils@release/0.1.1
RUN pip3 install git+https://github.com/lantrns-analytics/dpf_gdelt@release/0.1.1


# Copy resources for Dagster
COPY dpf_core/dagster.yaml $DAGSTER_HOME


# Create tmp repostiory for local temporary job files to be copied to
RUN mkdir -p $DAGSTER_HOME/tmp


# Copy and install dpf_core package
COPY dpf_core/ /opt/dagster/dpf_core/
RUN (cd /opt/dagster/dpf_core/dw/; dbt deps --profiles-dir ./)

WORKDIR /opt/dagster/dpf_core/


# Run dagster gRPC server on port 4000
EXPOSE 4000

CMD ["dagster", "api", "grpc", "--host", "0.0.0.0", "--port", "4000", "--python-file", "dpf_repo.py", "--working-directory", "/opt/dagster/dpf_core/"]