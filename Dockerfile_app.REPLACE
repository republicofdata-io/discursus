FROM python:3.9.8-slim-buster

# Environment variables
ENV APP_HOME=/usr/src/app
ENV AWS_ACCESS_KEY_ID=REPLACE_VALUE
ENV AWS_SECRET_ACCESS_KEY=REPLACE_VALUE
ENV SNOWFLAKE_ACCOUNT=REPLACE_VALUE
ENV SNOWFLAKE_USER=REPLACE_VALUE
ENV SNOWFLAKE_PASSWORD=REPLACE_VALUE
ENV SNOWFLAKE_ROLE=REPLACE_VALUE
ENV SNOWFLAKE_LOAD_WAREHOUSE=REPLACE_VALUE
ENV SNOWFLAKE_LOAD_DATABASE=REPLACE_VALUE
ENV SNOWFLAKE_LOAD_SCHEMA=REPLACE_VALUE
ENV SNOWFLAKE_DW_WAREHOUSE=REPLACE_VALUE
ENV SNOWFLAKE_DW_DATABASE=REPLACE_VALUE
ENV SNOWFLAKE_DW_SCHEMA=REPLACE_VALUE


# Create environment
RUN mkdir -p $APP_HOME
WORKDIR $APP_HOME


# Install the python package managers.
RUN pip install -U \
    pip \
    poetry


# Copy the contents of the project root directory to the app directory in the container
COPY . .


# Create tmp repostiory for local temporary job files to be copied to
RUN mkdir -p ./tmp


# Install dependancies
COPY poetry.lock pyproject.toml ./

RUN poetry config virtualenvs.create false \
  && poetry install


# Copy and install discursus_data_platform package
RUN (cd ./discursus_data_platform/dp_data_warehouse/; dbt deps --profiles-dir ./)


# Run dagster gRPC server on port 4000
EXPOSE 4000

CMD ["dagster", "api", "grpc", "--host", "0.0.0.0", "--port", "4000", "--python-file", "./discursus_data_platform/repository.py", "--working-directory", "./discursus_data_platform/"]
