FROM ubuntu:latest

# Environment variables
ENV DAGSTER_HOME=/opt/dagster/dagster_home/
ENV DISCURSUS_MINER_GDELT_HOME=/opt/dagster/app/miners/gdelt
ENV AWS_ACCESS_KEY_ID=VALUE
ENV AWS_SECRET_ACCESS_KEY=VALUE
ENV SNOWFLAKE_ACCOUNT=VALUE
ENV SNOWFLAKE_USER=VALUE
ENV SNOWFLAKE_PASSWORD=VALUE
ENV SNOWFLAKE_ROLE=VALUE
ENV SNOWFLAKE_LOAD_WAREHOUSE=VALUE
ENV SNOWFLAKE_LOAD_DATABASE=VALUE
ENV SNOWFLAKE_LOAD_SCHEMA=VALUE
ENV SNOWFLAKE_DW_WAREHOUSE=VALUE
ENV SNOWFLAKE_DW_DATABASE=VALUE
ENV SNOWFLAKE_DW_SCHEMA=VALUE


RUN mkdir -p $DAGSTER_HOME

RUN apt-get update && apt-get install -y \
    software-properties-common
RUN add-apt-repository universe
RUN apt-get update && apt-get install -y \
    curl \
    git \
    python3.4 \
    python3-pip \
    zsh \
    unzip

RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.1/zsh-in-docker.sh)"

RUN pip3 install awscli dagster dagit dagster-postgres dagster-docker dagster_shell dagster_snowflake dagster_dbt dbt==0.19.1

COPY orchestration/dagster.yaml $DAGSTER_HOME


# Add repository code

WORKDIR /opt/dagster/app

COPY .aws/ /opt/dagster/app/.aws/

COPY miners/ /opt/dagster/app/miners/
COPY dw/ /opt/dagster/app/dw/
RUN (cd /opt/dagster/app/dw/; dbt deps --profiles-dir ./; dbt seed --full-refresh --profiles-dir ./)

COPY orchestration/discursus_pipelines.py /opt/dagster/app
COPY orchestration/configs /opt/dagster/app/configs


# Run dagster gRPC server on port 4000

EXPOSE 4000


# CMD allows this to be overridden from run launchers or executors that want
# to run other commands against your repository
CMD ["dagster", "api", "grpc", "-h", "0.0.0.0", "-p", "4000", "-f", "discursus_pipelines.py"]